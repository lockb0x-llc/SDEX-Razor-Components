<style>
    .market-information {
        display: flex;
        flex-direction: row;
        gap: 10px;
        padding: 8px;
        background: none;
        border-radius: 8px;
        overflow-x: auto; /* Ensures scroll for small screens */
    }

    .market-stats,
    .exchange-stats {
        display: flex;
        flex-direction: row;
        gap: 12px;
    }

    .stat-item {
        display: flex;
        flex-direction: column; /* Stack label above value */
        align-items: center; /* Center align text */
        gap: 18px;
        background: none;
        padding: 22px;
        border-radius: 5px;
    }

    .stat-label {
        font-size: 8pt;
        color: #ffcc00;
        text-align: center; /* Center align labels */
    }

    .stat-value {
        font-size: 8pt;
        font-weight: bold;
        color: #e0e0e0;
        text-align: center; /* Center align values */
    }

    .change-up {
        color: green;
    }

    .change-down {
        color: red;
    }
</style>
<div class="market-information">
    <!-- Market Stats Section -->
    <div class="market-stats">
        <div class="stat-item">
            <div class="stat-label">On-Chain High</div>
            <div id="highPrice" class="stat-value">-</div>
        </div>
        <div class="stat-item">
            <div class="stat-label">On-Chain Low</div>
            <div id="lowPrice" class="stat-value">-</div>
        </div>
        <div class="stat-item">
            <div class="stat-label">On-Chain Vol (24hr)</div>
            <div id="onChainVolume" class="stat-value">-</div>
        </div>
    </div>

    <!-- Exchange Stats Section -->
    <div class="exchange-stats">
        <div class="stat-item">
            <div class="stat-label">Exchange Market Cap (USD)</div>
            <div id="exchangeMarketCap" class="stat-value">-</div>
        </div>
        <div class="stat-item">
            <div class="stat-label">XLM Exchange Volume (24Hr)</div>
            <div id="exchangeVolumeXLM" class="stat-value">-</div>
        </div>
        <div class="stat-item">
            <div class="stat-label">Exchange Supply (XLM)</div>
            <div id="exchangeSupply" class="stat-value">-</div>
        </div>
        <div class="stat-item">
            <div class="stat-label">Current Price (XLM/USD)</div>
            <div id="currentPrice" class="stat-value">-</div>
        </div>
        <div class="stat-item">
            <div class="stat-label">Change (24Hr)</div>
            <div id="priceChange" class="stat-value">-</div>
        </div>
    </div>
</div>

@code {
    // Properties for displaying market information
    public string HighPrice { get; set; } = "-";
    public string LowPrice { get; set; } = "-";
    public string OnChainVolume { get; set; } = "-";
    public string ExchangeMarketCap { get; set; } = "-";
    public string ExchangeVolumeXLM { get; set; } = "-";
    public string ExchangeSupply { get; set; } = "-";
    public string CurrentPrice { get; set; } = "-";
    public string PriceChange { get; set; } = "-";

    protected override async Task OnInitializedAsync()
    {
        // Any server-side initialization logic can go here if needed.
        await FetchInitialData();
    }

    private async Task FetchInitialData()
    {
        // Placeholder for fetching initial data, if required.
        // For example, calling APIs to pre-populate some fields.
        await Task.CompletedTask;
    }

    // Methods to update UI (invoked from JavaScript if required)
    public void UpdateHighPrice(string value) => HighPrice = value;
    public void UpdateLowPrice(string value) => LowPrice = value;
    public void UpdateOnChainVolume(string value) => OnChainVolume = value;
    public void UpdateExchangeMarketCap(string value) => ExchangeMarketCap = value;
    public void UpdateExchangeVolumeXLM(string value) => ExchangeVolumeXLM = value;
    public void UpdateExchangeSupply(string value) => ExchangeSupply = value;
    public void UpdateCurrentPrice(string value) => CurrentPrice = value;
    public void UpdatePriceChange(string value) => PriceChange = value;
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/stellar-sdk/13.0.0/stellar-sdk.min.js"></script>
<script src="./_content/PakanaRazorSDEX/js/marketInfo.js"></script>
<script src="./_content/PakanaRazorSDEX/js/global.js"></script>